steps:
- name: 'gcr.io/cloud-builders/docker'
  id: 'pull image cache'
  entrypoint: 'bash'
  args:
    - -c
    - |
      docker pull gcr.io/$PROJECT_ID/alpaca-py:deps || true

- name: 'gcr.io/cloud-builders/docker'
  id: 'deps build'
  args: [
    'build',
    '--target', 'deps',
    '-t', 'gcr.io/$PROJECT_ID/alpaca-py:deps',
    '--cache-from', 'gcr.io/$PROJECT_ID/alpaca-py:deps',
    '.'
  ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'build image'
  args: [
    'build',
    '-t', 'gcr.io/$PROJECT_ID/alpaca-py:latest',
    '--cache-from', 'gcr.io/$PROJECT_ID/alpaca-py:deps',
    '.'
  ]

- name: 'gcr.io/cloud-builders/docker'
  id: 'push images'
  entrypoint: 'sh'
  args:
    - -c
    - |
      set -eu
      if [ "$TAG_NAME" = "" ] && [ "$BRANCH_NAME" = "master" ]; then
          docker tag gcr.io/$PROJECT_ID/alpaca-py:latest gcr.io/$PROJECT_ID/alpaca-py:${BRANCH_NAME}-latest
          docker push gcr.io/$PROJECT_ID/alpaca-py:${BRANCH_NAME}-latest
      fi

      if [ "$TAG_NAME" != "" ]; then
          docker tag gcr.io/$PROJECT_ID/alpaca-py:latest gcr.io/$PROJECT_ID/alpaca-py:$TAG_NAME
          docker push gcr.io/$PROJECT_ID/alpaca-py:$TAG_NAME
      else
          docker push gcr.io/$PROJECT_ID/alpaca-py:deps
          docker push gcr.io/$PROJECT_ID/alpaca-py:latest
      fi

- name: 'gcr.io/cloud-builders/kubectl'
  id: 'deploy to staging or master as appropriate'
  entrypoint: 'sh'
  secretEnv: ['SA_TOKEN_STAGING','SA_TOKEN_MASTER']
  args:
    - -c
    - |
      set -eu
      if [ "$TAG_NAME" = "" ] && [ "$BRANCH_NAME" = "master" ] ; then
        SA_TOKEN="$$SA_TOKEN_STAGING"
      elif [ "$TAG_NAME" != "" ]; then
        SA_TOKEN="$$SA_TOKEN_MASTER"
      fi
      if [ "$_KUBE_API_SERVER" != "" -a "$_KUBE_CA_CRT" != "" -a "$_KUBE_NAMESPACE" != "" -a "$_KUBE_DEPLOYMENT" != "" -a "$$SA_TOKEN" != "" ]; then
        echo "$_KUBE_CA_CRT" > /tmp/ca.crt
        if [ "$TAG_NAME" != "" ]; then
          kubectl --certificate-authority /tmp/ca.crt --server "$_KUBE_API_SERVER" --namespace "$_KUBE_NAMESPACE" --token "$$SA_TOKEN" set image deploy "$_KUBE_DEPLOYMENT" nginx=gcr.io/$PROJECT_ID/alpaca-py:$TAG_NAME
        fi
        kubectl --certificate-authority /tmp/ca.crt --server "$_KUBE_API_SERVER" --namespace "$_KUBE_NAMESPACE" --token "$$SA_TOKEN" rollout restart deploy "$_KUBE_DEPLOYMENT"
      fi


availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/alpaca-py-staging-cloudbuild-kubernetes-sa-token/versions/latest
      env: 'SA_TOKEN_STAGING'
    - versionName: projects/$PROJECT_ID/secrets/alpaca-py-prod-cloudbuild-kubernetes-sa-token/versions/latest
      env: 'SA_TOKEN_MASTER'

timeout: 1200s
